python是解释性语言
解释型语言与编译型语言的区别：
	编译型语言在程序执行之前，有一个单独的编译过程，将程序翻译成机器语言就不用再进行翻译了。消耗内存少
	解释型语言，是在运行的时候将程序翻译成机器语言，所以运行速度相对于编C/C++ 等都是编译型语言，而Java，C#等都是解释型语言。平台的独立性与高度的安全性
python 优点：优雅，简单，明确，跨品台
	缺点：运行速度慢，代码不能加
python解释器：
	Cpython:是用c语言开发的，用途最广，在命令行输入python就是启动cpython解释器
	Ipython:是基于cpython之上的一个交互式解释器，即交互式有所增强，代码功能和cpython一样的.CPython用>>>作为提示符，而IPython用In [序号]:作为提示符
	PyPy:目标是执行速度。pypy采用JIT技术，对python代码进行动态编译。PyPy与cpython执行可能会有不同的结果
	Jpython:是运行在Java平台下的解释器，可以把python代码编译成Java字节码
	Ironpython:是运行在微软.net平台上的解释器，可以把python代码编译城.net字节码

空值
空值是Python里一个特殊的值，用None表示。None不能理解为0，因为0是有意义的，而None是一个特殊的空值。

这种变量本身类型不固定的语言称之为动态语言，与之对应的是静态语言。静态语言在定义变量时必须指定变量类型，如果赋值的时候类型不匹配，就会报错。例如Java是静态语言，赋值语句如下（// 表示注释）：

int a = 123; // a是整数类型变量
a = "ABC"; // 错误：不能把字符串赋给整型变量
和静态语言相比，动态语言更灵活，就是这个原因。
